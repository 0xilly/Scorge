buildscript {
    repositories {
        maven { url = 'http://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
    }
}

plugins {
    id 'org.ajoberstar.grgit' version '2.3.0'
    id "com.github.johnrengelman.shadow" version "4.0.4"
    id 'maven-publish'
    id 'scala'
}

apply plugin: 'net.minecraftforge.gradle'
version = getVersion()
group = 'net.minecraftforge'
archivesBaseName = 'Scorge'

repositories {
    mavenCentral()
}

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'

minecraft {
    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings channel: 'snapshot', version: "${mappings_version}"

    runs {
        client = {
            // recommended logging data for a userdev environment
            properties 'forge.logging.markers': 'SCAN,REGISTRIES,REGISTRYDUMP'
            // recommended logging level for the console
            properties 'forge.logging.console.level': 'debug'
            workingDirectory project.file('run').canonicalPath
            source sourceSets.main
        }
        server = {
            // recommended logging data for a userdev environment
            properties 'forge.logging.markers': 'SCAN,REGISTRIES,REGISTRYDUMP'
            // recommended logging level for the console
            properties 'forge.logging.console.level': 'debug'
            workingDirectory project.file('run').canonicalPath
            source sourceSets.main
        }
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${mc_version}-${forge_version}"
    implementation "org.scala-lang:scala-library:${scala_lib}"
    implementation "org.scala-lang.modules:scala-java8-compat_${java8_compact}"
}

jar {
    manifest {
        attributes([
                'FMLModType': 'LANGPROVIDER'
        ])

        attributes(['Specification-Title': 'Mod Language Provider',
                    'Specification-Vendor': 'Forge',
                    'Specification-Version': '1.0',
                    'Implementation-Title': "Scorge",
                    'Implementation-Version': getVersion(),
                    'Implementation-Vendor' :'Scorge',
                    'Implementation-Timestamp': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                    'Git-Commit': grgit.head().abbreviatedId,
                    'Git-Branch': grgit.branch.current().getName() ],
                'net/minecraftforge/scorge/lang/')
    }
}

shadowJar {
    classifier = ""
    dependencies {
        include(dependency("org.scala-lang:scala-library:${scala_lib}"))
        include(dependency("org.scala-lang.modules:scala-java8-compat_${java8_compact}"))
    }
}

tasks.build.dependsOn shadowJar

artifacts {
    archives shadowJar
}

publishing {
    publications {
        shadow(MavenPublication) { publication ->
            project.shadow.component(publication)

            pom {
                name = 'Scorge'
                description = 'The offical Scala language loader for Forge'
                url = 'https://github.com/MinecraftForge/Scorge/'
                scm {
                    url = 'https://github.com/MinecraftForge/Scorge'
                    connection = 'scm:git:git://github.com/MinecraftForge/scorge.git'
                    developerConnection = 'scm:git:git@github.com:MinecraftForge/scorge.git'
                }
                issueManagement {
                    system = 'github'
                    url = 'https://github.com/MinecraftForge/Scorge/issues'
                }

                licenses {
                    license {
                        name = 'LGPLv2.1'
                        url = 'https://www.gnu.org/licenses/old-licenses/lgpl-2.1.txt'
                    }
                }

                developers {
                    developer {
                        id = 'illyohs'
                        name = 'Anthony Anderson'
                    }
                }
            }
        }
    }
    repositories {
        maven {
            credentials {
                username project.properties.forgeMavenUser?:'fake'
                password project.properties.forgeMavenPassword?:'news'
            }
            url "http://files.minecraftforge.net/maven/manage/upload"
        }
    }
}

def getVersion()
{
    String base_number = "${mod_version}"
    if (System.hasProperty("BUILD_NUMBER").toString())
    {
        return base_number + "." + System.getenv("BUILD_NUMBER").toString()
    } else {
        return base_number + ".${grgit.head().abbreviatedId}"
    }
}