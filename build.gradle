buildscript {
    repositories {
        maven { url = 'http://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
    }
}

plugins {
    id 'org.ajoberstar.grgit' version '2.3.0'
    id "com.github.johnrengelman.shadow" version "4.0.4"
}

apply plugin: 'scala'
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'idea'
//Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
version = "${mod_version}"
group = 'net.minecraftforge.scorge'
archivesBaseName = 'Scorge'

repositories {
    mavenCentral()
}

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'

minecraft {
    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings channel: 'snapshot', version: '20180921-1.13'

    runs {
        client = {
            // recommended logging data for a userdev environment
            properties 'forge.logging.markers': 'SCAN,REGISTRIES,REGISTRYDUMP'
            // recommended logging level for the console
            properties 'forge.logging.console.level': 'debug'
            workingDirectory project.file('run').canonicalPath
            source sourceSets.main
        }
        server = {
            // recommended logging data for a userdev environment
            properties 'forge.logging.markers': 'SCAN,REGISTRIES,REGISTRYDUMP'
            // recommended logging level for the console
            properties 'forge.logging.console.level': 'debug'
            workingDirectory project.file('run').canonicalPath
            source sourceSets.main
        }
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:1.13.2-25.0.22"
    implementation "org.scala-lang:scala-library:${scala_lib}"
    implementation "org.scala-lang.modules:scala-java8-compat_${java8_compact}"

}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property 'version', project.version
    inputs.property 'mcversion', '1.13.2'

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version':project.version, 'mcversion': '1.13'
    }

    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

jar {
    manifest {
        attributes([
                'FMLModType': 'LANGPROVIDER'
        ])

        attributes(['Specification-Title': 'scorge',
                    'Specification-Vendor': 'Forge',
                    'Specification-Version': '1', // Currently version 1 of the eventbus specification
                    'Implementation-Title': project.name,
                    'Implementation-Version': "${version}+${System.getenv("BUILD_NUMBER")?:0}+${grgit.head().abbreviatedId}",
                    'Implementation-Vendor' :'Scorge',
                    'Implementation-Timestamp': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                    'Git-Commit': grgit.head().abbreviatedId,
                    'Git-Branch': grgit.branch.current().getName() ],
                'Scorge/')
    }
}

shadowJar {
    classifier = ""
    dependencies {
        include(dependency("org.scala-lang:scala-library:${scala_lib}"))
        include(dependency("org.scala-lang.modules:scala-java8-compat_${java8_compact}"))
    }
}

tasks.build.dependsOn shadowJar

artifacts {
    archives shadowJar
}
